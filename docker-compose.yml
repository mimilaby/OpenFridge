version: '3.8'

services:
  homeapp-frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: homeapp-frontend
    restart: always
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/node/app:delegated
      - /node/app/node_modules
    networks:
      - mynet
    ports:
      - 4173:4173
      - 5173:5173

  docker-gs-ping-roach:
    depends_on: 
      - postgres
    build:
      context: ./backend/
    container_name: rest-server
    hostname: rest-server
    networks:
      - mynet
    ports:
      - 8080:8080
    # environment:

    deploy:
      restart_policy:
        condition: on-failure

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: docker
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme11}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - mynet
    restart: unless-stopped

volumes:
  postgres:

networks:
  mynet:
    driver: bridge